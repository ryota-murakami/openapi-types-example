/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/api/user_count": {
    /** /api/user_count */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @example 0 */
              userCount?: number;
            };
          };
        };
      };
    };
  };
  "/api/post_list": {
    /** /api/post_list */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              postList?: components["schemas"]["Posts"];
              /** @example 0 */
              total?: number;
            };
          };
        };
        304: {
          content: never;
        };
      };
    };
  };
  "/api/post/{id}": {
    /** /api/post/{id} */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["Post"];
          };
        };
        304: {
          content: never;
        };
      };
    };
    /** /api/post/{id} */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @example Delete Successful! */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/api/signup": {
    /** /api/signup */
    post: {
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["Author"];
          };
        };
      };
    };
  };
  "/api/login": {
    /** /api/login */
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @example User does not exist */
              failed?: string;
            };
          };
        };
      };
    };
  };
  "/api/logout": {
    /** /api/logout */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @example Logout Successful */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/api/create": {
    /** /api/create */
    post: {
      responses: {
        /** @description Created */
        201: {
          content: {
            "application/json": components["schemas"]["Post"];
          };
        };
      };
    };
  };
  "/api/update": {
    /** /api/update */
    post: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": {
              /** @example Post Updated! */
              message?: string;
            };
          };
        };
      };
    };
  };
  "/api/push_stock": {
    /** /api/push_stock */
    post: {
      responses: {
      };
    };
  };
  "/api/stocklist": {
    /** /api/stocklist */
    get: {
      responses: {
        /** @description OK */
        200: {
          content: {
            "application/json": components["schemas"]["StockList"];
          };
        };
        304: {
          content: never;
        };
      };
    };
  };
  "/api/stock/{id}": {
    /** /api/stock/{id} */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Author: {
      /** Format: int64 */
      id?: number;
      name?: string;
      /** Format: date-time */
      createdAt?: string;
      password?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    Post: {
      id?: number;
      title?: string;
      body?: string;
      /** Format: date-time */
      createdAt?: string;
      /** Format: date-time */
      updatedAt?: string;
    };
    Posts: components["schemas"]["Post"][];
    Stock: {
      id?: number;
      /** Format: date-time */
      createdAt?: string;
      pageTitle?: string;
      /** Format: date-time */
      updatedAt?: string;
      url?: string;
    };
    StockList: components["schemas"]["Stock"][];
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
