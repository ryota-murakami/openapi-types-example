/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/user/users/developer": {
    /** デベロッパーユーザーの一覧取得 */
    get: operations["listDeveloperUsers"];
    /** デベロッパーユーザーの登録 */
    post: operations["addDeveloperUser"];
  };
  "/user/users/disaster_prevention_center": {
    /** 防災センターユーザーの一覧取得 */
    get: operations["listDisasterPreventionCenterUsers"];
    /** 防災センターユーザーの登録 */
    post: operations["addDisasterPreventionCenterUser"];
  };
  "/user/users/shop": {
    /** ショップユーザーの一覧取得 */
    get: operations["listShopUsers"];
    /** ショップユーザーの登録 */
    post: operations["addShopUser"];
  };
  "/user/users/{id}": {
    /** ユーザーの詳細取得 */
    get: operations["showUser"];
  };
  "/user/users/{id}/develoepr": {
    /** デベロッパーユーザーの更新 */
    put: operations["updateDeveloperUser"];
  };
  "/user/users/{id}/disaster_prevention_center": {
    /** 防災センターユーザーの更新 */
    put: operations["updateDisasterPreventionCenterUser"];
  };
  "/user/users/{id}/shop": {
    /** ショップユーザーの更新 */
    put: operations["updateShopUser"];
  };
  "/user/users/{id}/reset_password": {
    /** ユーザーのパスワードリセット */
    patch: operations["resetPasswordUser"];
  };
  "/user/users/{id}/send_confirmation_mails": {
    /** ユーザーのメールアドレスに確認メールを送信 */
    patch: operations["sendConfirmationUserMails"];
  };
  "/user/users/{id}/activate": {
    /** ユーザーの有効化 */
    patch: operations["activateUser"];
  };
  "/user/users/{id}/deactivate": {
    /** ユーザーの無効化 */
    patch: operations["deactivateUser"];
  };
  "/user/users/{id}/lock": {
    /** ユーザーのロック */
    patch: operations["lockUser"];
  };
  "/user/users/{id}/unlock": {
    /** ユーザーのロック解除 */
    patch: operations["unlockUser"];
  };
  "/user/users/export": {
    /** ユーザー情報のエクスポート */
    get: operations["exportUsers"];
  };
  "/user/users/import": {
    /** ユーザー情報のインポート */
    post: operations["importUsers"];
  };
  "/user/users/{id}/products": {
    /** 利用製品の登録 */
    post: operations["addUserProduct"];
  };
  "/user/users/{userId}/products/{productId}": {
    /** 利用製品の削除 */
    delete: operations["deleteUserProduct"];
  };
  "/user/user_groups": {
    /** ユーザーグループの一覧取得 */
    get: operations["listUserGroups"];
    /** ユーザーグループの登録 */
    post: operations["addUserGroup"];
  };
  "/user/user_groups/{id}": {
    /** ユーザーグループの詳細取得 */
    get: operations["showUserGroup"];
    /** ユーザーグループの更新 */
    put: operations["updateUserGroup"];
    /** ユーザーグループの削除 */
    delete: operations["deleteUserGroup"];
  };
  "/user/facilities/{id}/areas": {
    /** エリアの一覧取得 */
    get: operations["listFacilityAreas"];
    /** エリアの登録 */
    post: operations["addFacilityArea"];
  };
  "/user/areas/{id}": {
    /** エリアの更新 */
    put: operations["updateFacilityArea"];
  };
  "/user/areas/{id}/activate": {
    /** エリアの有効化 */
    patch: operations["activateFacilityArea"];
  };
  "/user/areas/{id}/deactivate": {
    /** エリアの無効化 */
    patch: operations["deactivateFacilityArea"];
  };
  "/user/facilities/{id}/floors": {
    /** フロアの一覧取得 */
    get: operations["listFacilityFloors"];
    /** フロアの登録 */
    post: operations["addFacilityFloor"];
  };
  "/user/floors/{id}": {
    /** フロアの更新 */
    put: operations["updateFacilityFloor"];
  };
  "/user/floors/{id}/activate": {
    /** フロアの有効化 */
    patch: operations["activateFacilityFloor"];
  };
  "/user/floors/{id}/deactivate": {
    /** フロアの無効化 */
    patch: operations["deactivateFacilityFloor"];
  };
  "/user/facilities": {
    /** 施設の一覧取得 */
    get: operations["listFacilities"];
    /** 施設の登録 */
    post: operations["addFacility"];
  };
  "/user/facilities/{id}": {
    /** 施設の詳細取得 */
    get: operations["showFacility"];
    /** 施設の更新 */
    put: operations["updateFacility"];
    /** 施設の削除 */
    delete: operations["deleteFacility"];
  };
  "/user/facilities/{id}/lock": {
    /** 施設のロック */
    patch: operations["lockFacility"];
  };
  "/user/facilities/{id}/unlock": {
    /** 施設のロック解除 */
    patch: operations["unlockFacility"];
  };
  "/user/facilities/{id}/activate": {
    /** 施設の有効化 */
    patch: operations["activateFacility"];
  };
  "/user/facilities/{id}/deactivate": {
    /** 施設の無効化 */
    patch: operations["deactivateFacility"];
  };
  "/user/facilities/{id}/shops": {
    /** ショップの一覧取得 */
    get: operations["listFacilityShops"];
    /** ショップの登録 */
    post: operations["addFacilityShops"];
  };
  "/user/shops/{id}": {
    /** ショップの詳細取得 */
    get: operations["showFacilityShop"];
    /** ショップの更新 */
    put: operations["updateFacilityShop"];
    /** ショップの削除 */
    delete: operations["deleteFacilityShop"];
  };
  "/user/products": {
    /** 契約製品一覧取得 */
    get: operations["listProducts"];
  };
  "/user/products/{id}": {
    /** 契約製品の詳細取得 */
    get: operations["showProduct"];
  };
  "/user/products/{id}/users": {
    /** 製品ユーザーの登録 */
    post: operations["addProductUsers"];
    /** 製品ユーザーの登録解除 */
    delete: operations["deleteProductUsers"];
  };
  "/user/products/{id}/developer_users": {
    /** 製品に紐づくユーザーの一覧取得（デベロッパー企業） */
    get: operations["listProductUsers_developer"];
  };
  "/user/products/{id}/disaster_prevention_center_users": {
    /** 製品に紐づくユーザーの一覧取得（防災センター） */
    get: operations["listProductUsers_disasterPreventionCenter"];
  };
  "/user/products/{id}/shop_users": {
    /** 製品に紐づくユーザーの一覧取得（ショップ） */
    get: operations["listProductUsers_shop"];
  };
  "/user/management_divisions": {
    /** 管理区分一覧取得 */
    get: operations["listManagementDivisions"];
    /** 管理区分の登録 */
    post: operations["addManagementDivision"];
  };
  "/user/management_divisions/{id}": {
    /** 管理区分の詳細取得 */
    get: operations["getManagementDivision"];
    /** 管理区分の更新 */
    put: operations["updateManagementDivision"];
  };
  "/user/management_divisions/{id}/activate": {
    /** 管理区分の有効化 */
    patch: operations["activateManagementDivision"];
  };
  "/user/management_divisions/{id}/deactivate": {
    /** 管理区分の無効化 */
    patch: operations["deactivateManagementDivision"];
  };
  "/user/management_divisions/{id}/values": {
    /** 管理区分値の登録 */
    post: operations["addManagementDivisionValue"];
  };
  "/user/management_divisions/{id}/values/reorder": {
    /** 管理区分値の並び替え */
    put: operations["reorderManagementDivisionValues"];
  };
  "/user/management_division_values/{id}": {
    /** 管理区分値の更新 */
    put: operations["updateManagementDivisionValue"];
  };
  "/user/management_division_values/{id}/activate": {
    /** 管理区分値の有効化 */
    patch: operations["activateManagementDivisionValue"];
  };
  "/user/management_division_values/{id}/deactivate": {
    /** 管理区分値の無効化 */
    patch: operations["deactivateManagementDivisionValue"];
  };
  "/user/logo": {
    /** ロゴの登録 */
    post: operations["addLogo"];
    /** ロゴの削除 */
    delete: operations["deleteLogo"];
  };
  "/admin/products": {
    /** 製品の一覧取得 */
    get: operations["listProducts"];
    /** 製品の登録 */
    post: operations["addProduct"];
  };
  "/admin/products/reorder": {
    /** 製品の並び替え */
    put: operations["reorderProducts"];
  };
  "/admin/products/{id}": {
    /** 製品の詳細取得 */
    get: operations["showProducts"];
    /** 製品の更新 */
    put: operations["updateProducts"];
  };
  "/admin/products/{id}/lock": {
    /** 製品のロック */
    patch: operations["lockProduct"];
  };
  "/admin/products/{id}/unlock": {
    /** 製品のロック解除 */
    patch: operations["unlockProduct"];
  };
  "/admin/client_companies": {
    /** 契約会社の一覧取得 */
    get: operations["listClientCompanies"];
    /** 契約会社の登録 */
    post: operations["addClientCompany"];
  };
  "/admin/client_companies/{id}": {
    /** 契約会社の詳細取得 */
    get: operations["showClientCompany"];
    /** 契約会社の更新 */
    put: operations["updateClientCompany"];
    /** 契約会社の削除 */
    delete: operations["deleteClientCompany"];
  };
  "/admin/client_companies/{id}/lock": {
    /** 契約会社のロック */
    patch: operations["lockClientCompany"];
  };
  "/admin/client_companies/{id}/unlock": {
    /** 契約会社のロック解除 */
    patch: operations["unlockClientCompany"];
  };
  "/admin/client_companies/{id}/login": {
    /** 契約会社のメンテナンスログイン */
    post: operations["loginClientCompany"];
  };
  "/admin/client_companies/{id}/product_contracts": {
    /** 製品契約の一覧取得 */
    get: operations["listProductContracts"];
    /** 製品契約の登録 */
    post: operations["addProductContract"];
  };
  "/admin/product_contracts/{id}": {
    /** 製品契約の詳細取得 */
    get: operations["showProductContract"];
    /** 製品契約の更新 */
    put: operations["updateProductContract"];
  };
  "/admin/product_contracts/{id}/lock": {
    /** 製品契約のロック */
    patch: operations["lockProductContract"];
  };
  "/admin/product_contracts/{id}/unlock": {
    /** 製品契約のロック解除 */
    patch: operations["unlockProductContract"];
  };
  "/master/address/{postcode}": {
    /** 郵便番号から住所検索 */
    get: operations["findAddressByPostcode"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: never;
  responses: never;
  parameters: {
    /** @description ページ */
    pageParam?: number;
    /** @description 1ページあたりの表示件数 */
    perPageParam?: 20 | 50 | 100;
  };
  requestBodies: {
    /** @description 無効化理由 */
    deactivateReason?: {
      content: {
        "application/json": {
          /** @example 利用停止 */
          deactivateReason: string;
        };
      };
    };
    /** @description ロック理由 */
    lockReason?: {
      content: {
        "application/json": {
          /** @example 障害の為、一時利用停止 */
          lockReason: string;
        };
      };
    };
    /** @description 並び替え後のIDリスト */
    orderIds?: {
      content: {
        "application/json": {
          /**
           * @example [
           *   3,
           *   1,
           *   2
           * ]
           */
          orderIds: number[];
        };
      };
    };
  };
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export interface operations {

  /** デベロッパーユーザーの一覧取得 */
  listDeveloperUsers: {
    parameters: {
      query?: {
        /** @description ユーザー名・ユーザーコード */
        keywords?: string;
        /** @description ユーザーグループID */
        userGroupId?: number;
        /** @description 施設ID */
        facilityId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        page?: components["parameters"]["pageParam"];
        perPage?: components["parameters"]["perPageParam"];
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            users?: ({
                /** @example 1 */
                id?: number;
                /** @example ユーザー1 */
                name?: string;
                /** @example 0001 */
                code?: string;
                facilities?: {
                    /** @example 1 */
                    id?: number;
                    /** @example 施設A */
                    name?: string;
                    /** @example 0001 */
                    code?: string;
                  }[];
                /** @enum {string} */
                status?: "active" | "inactive";
                /** @example false */
                locked?: boolean;
              })[];
            /** @example 100 */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** デベロッパーユーザーの登録 */
  addDeveloperUser: {
    /** @description ユーザーの登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 契約内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          facilityIds: number[];
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 防災センターユーザーの一覧取得 */
  listDisasterPreventionCenterUsers: {
    parameters: {
      query?: {
        /** @description ユーザー名・ユーザーコード */
        keywords?: string;
        /** @description ユーザーグループID */
        userGroupId?: number;
        /** @description 施設ID */
        facilityId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        page?: components["parameters"]["pageParam"];
        perPage?: components["parameters"]["perPageParam"];
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            users?: ({
                /** @example 1 */
                id?: number;
                /** @example ユーザー1 */
                name?: string;
                /** @example 0001 */
                code?: string;
                facilities?: {
                    /** @example 1 */
                    id?: number;
                    /** @example 施設A */
                    name?: string;
                    /** @example 0001 */
                    code?: string;
                  }[];
                /** @enum {string} */
                status?: "active" | "inactive";
                /** @example false */
                locked?: boolean;
              })[];
            /** @example 100 */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 防災センターユーザーの登録 */
  addDisasterPreventionCenterUser: {
    /** @description ユーザーの登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 契約内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          facilityIds: number[];
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ショップユーザーの一覧取得 */
  listShopUsers: {
    parameters: {
      query?: {
        /**
         * @description ユーザー名・ユーザーコード
         * ショップ名・ショップコード
         */
        keywords?: string;
        /** @description ユーザーグループID */
        userGroup?: number;
        /** @description 施設ID */
        facilityId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /** @description ショップID */
        shopId?: number;
        /** @description スタッフ種別 */
        staffType?: "all" | "manager" | "employee";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        page?: components["parameters"]["pageParam"];
        perPage?: components["parameters"]["perPageParam"];
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            users?: ({
                /** @example 1 */
                id?: number;
                /** @example ユーザー1 */
                name?: string;
                /** @example 0001 */
                code?: string;
                facility?: {
                  /** @example 1 */
                  id?: number;
                  /** @example 施設A */
                  name?: string;
                  /** @example 0001 */
                  code?: string;
                };
                shop?: {
                  /** @example 1 */
                  id?: number;
                  /** @example ショップA */
                  name?: string;
                  /** @example 0001 */
                  code?: string;
                };
                /** @enum {string} */
                staffType?: "manager" | "employee";
                /** @enum {string} */
                status?: "active" | "inactive";
                /** @example false */
                locked?: boolean;
              })[];
            /** @example 100 */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ショップユーザーの登録 */
  addShopUser: {
    /** @description ショップユーザーの登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ショップユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 施設内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          /** @example 1 */
          shopId: number;
          /** @enum {string} */
          staffType: "manager" | "employee";
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザーの詳細取得 */
  showUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            user?: {
              /** @example 1 */
              id?: number;
              /** @example ユーザー1 */
              name?: string;
              /** @example 0001 */
              code?: string;
              /** @enum {string} */
              userType?: "developer" | "disasterPreventionCenter" | "shop";
              /**
               * @description ショップユーザーのみ
               * @enum {string}
               */
              staffType?: "manager" | "employee";
              /** @description デベロッパーと防災センターユーザーのみ */
              facilities?: {
                  /** @example 1 */
                  id?: number;
                  /** @example 施設A */
                  name?: string;
                  /** @example 0001 */
                  code?: string;
                }[];
              /** @description ショップユーザーのみ */
              facility?: {
                /** @example 1 */
                id?: number;
                /** @example 施設A */
                name?: string;
                /** @example 0001 */
                code?: string;
              };
              /** @description ショップユーザーのみ */
              shop?: {
                /** @example 1 */
                id?: number;
                /** @example ショップA */
                name?: string;
                /** @example 0001 */
                code?: string;
              };
              emails?: ({
                  /** @example test@example.com */
                  email?: string;
                  /** @enum {string} */
                  status?: "unconfirmed" | "confirmed";
                })[];
              /** Format: date */
              passwordExpirationDate?: string;
              isMaintenanceUser?: boolean;
              /** @enum {string} */
              status?: "active" | "inactive";
              /**
               * @description 状態が無効の場合は必須項目
               * @example 利用停止
               */
              deactivateReason?: string;
              /** @example false */
              locked?: boolean;
              /**
               * @description ロック状態がロック中の場合は必須項目
               * @example 障害の為、一時利用停止
               */
              lockReason?: string;
            };
            products?: {
                /** @example 1 */
                id?: number;
                /** @example コミュニケーション */
                name?: string;
                /** @example communication */
                code?: string;
                /** @example 1 */
                displayOrder?: number;
              }[];
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** デベロッパーユーザーの更新 */
  updateDeveloperUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    /** @description ユーザーの更新データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 契約内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          facilityIds: number[];
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 防災センターユーザーの更新 */
  updateDisasterPreventionCenterUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    /** @description ユーザーの更新データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 契約内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          facilityIds: number[];
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ショップユーザーの更新 */
  updateShopUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    /** @description ショップユーザーの更新データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example ユーザーA */
          name: string;
          /**
           * @description 半角英数字
           * 施設内のユーザーでユニーク制約
           *
           * @example 0001
           */
          code: string;
          /** @example 1 */
          shopId: number;
          /** @enum {string} */
          staffType: "manager" | "employee";
          /**
           * @description RFC準拠のメールアドレス
           * 契約会社内のユーザーでユニーク制約
           */
          emails?: string[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザーのパスワードリセット */
  resetPasswordUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーのメールアドレスに確認メールを送信 */
  sendConfirmationUserMails: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーの有効化 */
  activateUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーの無効化 */
  deactivateUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーのロック */
  lockUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["lockReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーのロック解除 */
  unlockUser: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 3 */
            userId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザー情報のエクスポート */
  exportUsers: {
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet": string;
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザー情報のインポート */
  importUsers: {
    requestBody?: {
      content: {
        "multipart/form-data": {
          /** Format: binary */
          file?: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 利用製品の登録 */
  addUserProduct: {
    parameters: {
      path: {
        /** @description ユーザーID */
        id: number;
      };
    };
    /** @description 利用製品登録データ */
    requestBody: {
      content: {
        "application/json": {
          productIds: number[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            userId?: number;
          };
        };
      };
      /** @description 契約数が上限に達している、ロックされている製品IDが含まれる */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 利用製品の削除 */
  deleteUserProduct: {
    parameters: {
      path: {
        /** @description ユーザーID */
        userId: number;
        /** @description 利用製品ID */
        productId: number;
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザーグループの一覧取得 */
  listUserGroups: {
    parameters: {
      query?: {
        /** @description ユーザーグループ名 */
        keywords?: string;
        /** @description タイプ */
        groupType?: "all" | "common" | "personal";
        /** @description 並び順 */
        sort?: "name";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            userGroups?: ({
                /** @example 1 */
                id?: number;
                /** @example 本部デベロッパー */
                name?: string;
                /** @enum {string} */
                groupType?: "common" | "personal";
              })[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザーグループの登録 */
  addUserGroup: {
    /** @description ユーザーグループの登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example 本部デベロッパー */
          name: string;
          /** @enum {string} */
          groupType: "common" | "personal";
          /** @description 所属施設のID */
          facilityIds: number[];
          /**
           * @description 設定した施設に所属しているユーザーのID
           * ユーザー選択範囲内のユーザーIDのみ
           */
          userIds: number[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            userGroupId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ユーザーグループの詳細取得 */
  showUserGroup: {
    parameters: {
      path: {
        /** @description ユーザーグループID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id?: number;
            /** @example 本部デベロッパー */
            name?: string;
            /** @enum {string} */
            groupType?: "common" | "personal";
            facilities?: {
                /** @example 1 */
                id?: number;
                /** @example 施設A */
                name?: string;
                /** @example 0001 */
                code?: string;
                users?: {
                    /** @example 1 */
                    id?: number;
                    /** @example デベロッパー1 */
                    name?: string;
                    /** @example 1 */
                    code?: string;
                  }[];
              }[];
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーグループの更新 */
  updateUserGroup: {
    parameters: {
      path: {
        /** @description ユーザーグループID */
        id: number;
      };
    };
    /** @description ユーザーグループの更新データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example 本部デベロッパー */
          name: string;
          /**
           * @description 設定した施設に所属しているユーザーのID
           * ユーザー選択範囲内のユーザーIDのみ
           */
          userIds: number[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            userGroupId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ユーザーグループの削除 */
  deleteUserGroup: {
    parameters: {
      path: {
        /** @description ユーザーグループID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** エリアの一覧取得 */
  listFacilityAreas: {
    parameters: {
      query?: {
        /** @description エリア名・エリアコード */
        keywords?: string;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            facility?: {
              /** @example 1 */
              id?: number;
              /** @example 施設A */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            areas?: ({
                /** @example 1 */
                id?: number;
                /** @example 東 */
                name?: string;
                /** @example east */
                code?: string;
                /** @enum {string} */
                status?: "active" | "inactive";
                /**
                 * @description 状態が無効の場合は必須項目
                 * @example 利用停止
                 */
                deactivateReason?: string;
              })[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** エリアの登録 */
  addFacilityArea: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    /** @description エリアの登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example 東 */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内でユニーク制約
           *
           * @example east
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            areaId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** エリアの更新 */
  updateFacilityArea: {
    parameters: {
      path: {
        /** @description エリアID */
        id: number;
      };
    };
    /** @description エリアの更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example 東 */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内でユニーク制約
           *
           * @example east
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            areaId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** エリアの有効化 */
  activateFacilityArea: {
    parameters: {
      path: {
        /** @description エリアID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            areaId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** エリアの無効化 */
  deactivateFacilityArea: {
    parameters: {
      path: {
        /** @description エリアID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            areaId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** フロアの一覧取得 */
  listFacilityFloors: {
    parameters: {
      query?: {
        /** @description フロア名・フロアコード */
        keywords?: string;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            facility?: {
              /** @example 1 */
              id?: number;
              /** @example 施設A */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            floors?: ({
                /** @example 1 */
                id?: number;
                /** @example 1F */
                name?: string;
                /** @example 1F */
                code?: string;
                /** @enum {string} */
                status?: "active" | "inactive";
                /**
                 * @description 状態が無効の場合は必須項目
                 * @example 利用停止
                 */
                deactivateReason?: string;
              })[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** フロアの登録 */
  addFacilityFloor: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    /** @description フロアの登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example 1F */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内でユニーク制約
           *
           * @example 1F
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            floorId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** フロアの更新 */
  updateFacilityFloor: {
    parameters: {
      path: {
        /** @description フロアID */
        id: number;
      };
    };
    /** @description フロアの更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example 1F */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内でユニーク制約
           *
           * @example 1F
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            floorId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** フロアの有効化 */
  activateFacilityFloor: {
    parameters: {
      path: {
        /** @description フロアID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            floorId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** フロアの無効化 */
  deactivateFacilityFloor: {
    parameters: {
      path: {
        /** @description フロアID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            floorId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設の一覧取得 */
  listFacilities: {
    parameters: {
      query?: {
        /** @description 施設名・施設コード */
        keywords?: string;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック */
        lock?: "all" | "unlocked" | "locked";
        /** @description 並び順 */
        sort?: "name" | "code" | "startDate" | "status" | "locked";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            facilities?: ({
                /** @example 1 */
                id?: number;
                /** @example サンプルショッピングセンター */
                name?: string;
                /** @example 0001 */
                code?: string;
                /**
                 * Format: date
                 * @example 2023-01-01
                 */
                startDate?: string;
                /** @enum {string} */
                status?: "active" | "inactive";
                /** @example false */
                locked?: boolean;
              })[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 施設の登録 */
  addFacility: {
    /** @description 施設の登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example サンプルショッピングセンター */
          name: string;
          /**
           * @description 半角英数字とハイフン12文字以内
           * ハイフンは先頭不可、連続使用不可
           * 契約ID毎にユニーク制約
           *
           * @example 0001
           */
          code: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 1234567
           */
          postcode?: string;
          /** @example 岡山県岡山市 */
          address?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 9012345678
           */
          phoneNumber?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 9012345678
           */
          faxNumber?: string;
          /** @example 担当太郎 */
          contactPerson?: string;
          /**
           * Format: date
           * @description 利用開始日
           * @example 2023-01-01
           */
          startDate?: string;
          /** @example 備考 */
          note?: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 施設の詳細取得 */
  showFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id?: number;
            /** @example サンプルショッピングセンター */
            name?: string;
            /** @example 0001 */
            code?: string;
            /** @example 1234567 */
            postcode?: string;
            /** @example 岡山県岡山市 */
            address?: string;
            /** @example 9012345678 */
            phoneNumber?: string;
            /** @example 9012345678 */
            faxNumber?: string;
            /** @example 担当太郎 */
            contactPerson?: string;
            /**
             * Format: date
             * @example 2023-01-01
             */
            startDate?: string;
            /** @example 備考 */
            note?: string;
            /** @enum {string} */
            status?: "active" | "inactive";
            /**
             * @description 状態が無効の場合は必須項目
             * @example 利用停止
             */
            deactivateReason?: string;
            /** @example false */
            locked?: boolean;
            /**
             * @description ロック状態がロック中の場合は必須項目
             * @example 障害の為、一時利用停止
             */
            lockReason?: string;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設の更新 */
  updateFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    /** @description 施設の更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example サンプルショッピングセンター */
          name: string;
          /**
           * @description 半角英数字とハイフン12文字以内
           * ハイフンは先頭不可、連続使用不可
           * 契約ID毎にユニーク制約
           *
           * @example 0001
           */
          code: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 1234567
           */
          postcode?: string;
          /** @example 岡山県岡山市 */
          address?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 9012345678
           */
          phoneNumber?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 9012345678
           */
          faxNumber?: string;
          /** @example 担当太郎 */
          contactPerson?: string;
          /**
           * Format: date
           * @description 利用開始日
           * @example 2023-01-01
           */
          startDate?: string;
          /** @example 備考 */
          note?: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設の削除 */
  deleteFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設のロック */
  lockFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["lockReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設のロック解除 */
  unlockFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設の有効化 */
  activateFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 施設の無効化 */
  deactivateFacility: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            facilityId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ショップの一覧取得 */
  listFacilityShops: {
    parameters: {
      query?: {
        /** @description ショップ名・ショップコード */
        keywords?: string;
        /** @description 営業状態 */
        status?: "open" | "close" | "all";
        /** @description フロアID */
        floorId?: number;
        /** @description 大業種ID */
        largeIndustryId?: number;
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        /** @description ページ番号 */
        page?: number;
        /** @description 1ページあたりの件数 */
        perPage?: 20 | 50 | 100;
      };
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            shops?: {
                /** @example 1 */
                id?: number;
                /** @example サンプルショップA */
                name?: string;
                /** @example 0001 */
                code?: string;
                /**
                 * Format: date
                 * @example 2023-01-01
                 */
                openDate?: string;
                /**
                 * Format: date
                 * @example 2023-12-31
                 */
                closeDate?: string;
                /** @example open */
                status?: string;
                floor?: {
                  /** @example 1 */
                  id?: number;
                  /** @example 1F */
                  name?: string;
                  /** @example 0001 */
                  code?: string;
                };
                largeIndustry?: {
                  /** @example 1 */
                  id?: number;
                  /** @example 飲食 */
                  name?: string;
                  /** @example 0001 */
                  code?: string;
                };
              }[];
            /**
             * Format: int64
             * @example 11
             */
            total_count?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ショップの登録 */
  addFacilityShops: {
    parameters: {
      path: {
        /** @description 施設ID */
        id: number;
      };
    };
    /** @description ショップの登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example サンプルショップA */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内ユニーク制約
           *
           * @example 0001
           */
          code: string;
          /** @example 1 */
          companyId?: number;
          /** @example サンプルマネージャー太郎 */
          manager?: string;
          /**
           * Format: date
           * @example 2023-01-01
           */
          contractStartDate?: string;
          /**
           * Format: date
           * @example 2023-12-31
           */
          contractEndDate?: string;
          /**
           * Format: date
           * @example 2023-01-01
           */
          openDate: string;
          /**
           * Format: date
           * @example 2023-12-31
           */
          closeDate?: string;
          /** @example 1 */
          floorId?: number;
          /** @example 1 */
          areaId?: number;
          /** @example 1 */
          largeIndustryId?: number;
          /** @example 1 */
          mediumIndustryId?: number;
          /** @example 1 */
          smallIndustryId?: number;
          managementDivisionValues?: {
              /** @example 1 */
              id?: number;
              /** @example 1 */
              valueId?: number;
            }[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            shopId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ショップの詳細取得 */
  showFacilityShop: {
    parameters: {
      path: {
        /** @description ショップID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id?: number;
            /** @example サンプルショップA */
            name?: string;
            /** @example 0001 */
            code?: string;
            company?: {
              /** @example 1 */
              id?: number;
              /** @example サンプル会社A */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            /** @example サンプルマネージャー太郎 */
            manager?: string;
            /** @example 2023-01-01 */
            contractStartDate?: string;
            /** @example 2023-12-31 */
            contractEndDate?: string;
            /** @example 2023-01-01 */
            openDate?: string;
            /** @example 2023-12-31 */
            closeDate?: string;
            floor?: {
              /** @example 1 */
              id?: number;
              /** @example 1F */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            area?: {
              /** @example 1 */
              id?: number;
              /** @example サンプルエリアA */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            largeIndustry?: {
              /** @example 1 */
              id?: number;
              /** @example 飲食 */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            mediumIndustry?: {
              /** @example 1 */
              id?: number;
              /** @example ファストフード */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            smallIndustry?: {
              /** @example 1 */
              id?: number;
              /** @example ハンバーガー */
              name?: string;
              /** @example 0001 */
              code?: string;
            };
            managementDivisionValues?: {
                /** @example 1 */
                id?: number;
                /** @example 管理区分A */
                name?: string;
                /** @example 0001 */
                value?: string;
              }[];
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ショップの更新 */
  updateFacilityShop: {
    parameters: {
      path: {
        /** @description ショップID */
        id: number;
      };
    };
    /** @description ショップの更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /** @example サンプルショップA */
          name: string;
          /**
           * @description 半角英数字12文字以内
           * 施設内ユニーク制約
           *
           * @example 0001
           */
          code: string;
          /** @example 1 */
          companyId?: number;
          /** @example サンプルマネージャー太郎 */
          manager?: string;
          /**
           * Format: date
           * @example 2023-01-01
           */
          contractStartDate?: string;
          /**
           * Format: date
           * @example 2023-12-31
           */
          contractEndDate?: string;
          /**
           * Format: date
           * @example 2023-01-01
           */
          openDate: string;
          /**
           * Format: date
           * @example 2023-12-31
           */
          closeDate?: string;
          /** @example 1 */
          floorId?: number;
          /** @example 1 */
          areaId?: number;
          /** @example 1 */
          largeIndustryId?: number;
          /** @example 1 */
          mediumIndustryId?: number;
          /** @example 1 */
          smallIndustryId?: number;
          managementDivisionValues?: {
              /** @example 1 */
              id?: number;
              /** @example 1 */
              valueId?: number;
            }[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            shopId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ショップの削除 */
  deleteFacilityShop: {
    parameters: {
      path: {
        /** @description ショップID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品の一覧取得 */
  listProducts: {
    parameters: {
      query?: {
        /** @description 製品名 */
        keywords?: string;
        /** @description 並び順 */
        sort?: "name" | "code" | "displayOrder" | "locked";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            products?: {
                /** @example 1 */
                id?: number;
                /** @example コミュニケーション */
                name?: string;
                /** @example communication */
                code?: string;
                /** @example 1 */
                displayOrder?: number;
                /** @example false */
                locked?: boolean;
              }[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 契約製品の詳細取得 */
  showProduct: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 製品ID
             * @example 1
             */
            id?: number;
            /**
             * @description 製品名
             * @example コミュニケーション
             */
            name?: string;
            /**
             * Format: date
             * @description 契約開始日
             * @example 2023-04-01
             */
            startDate?: string;
            /**
             * Format: date
             * @description 契約終了日
             * @example 2024-03-31
             */
            endDate?: string;
            /**
             * Format: int64
             * @description 最大ユーザー数
             * @example 100
             */
            maxNumberOfUsers?: number;
            /**
             * Format: int64
             * @description 現在のユーザー数
             * @example 80
             */
            currentNumberOfUsers?: number;
            /**
             * @description ロックされているか
             * @example false
             */
            locked?: boolean;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品ユーザーの登録 */
  addProductUsers: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description ユーザーID
           * @example [
           *   1,
           *   2,
           *   3
           * ]
           */
          userIds: number[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品ユーザーの登録解除 */
  deleteProductUsers: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description ユーザーID
           * @example [
           *   1,
           *   2,
           *   3
           * ]
           */
          userIds: number[];
        };
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品に紐づくユーザーの一覧取得（デベロッパー企業） */
  listProductUsers_developer: {
    parameters: {
      query?: {
        /**
         * @description 検索キーワード。
         * ユーザー名、ユーザーコードを対象とする。
         * 制御文字は弾く。
         */
        keywords?: string;
        /**
         * @description ユーザーグループID
         * @example 1
         */
        userGroupId?: number;
        /** @description 施設ID */
        facilityId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /**
         * @description 検索モード。
         * 製品に紐づくユーザーのみを取得する場合はproductUsersOnlyを指定する。
         * 製品に紐づかないユーザーのみを取得する場合はnonProductUsersOnlyを指定する。
         */
        mode?: "productUsersOnly" | "nonProductUsersOnly";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        /** @description ページ番号 */
        page?: number;
        /** @description 1ページあたりの表示件数 */
        perPage?: 20 | 50 | 100;
      };
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @description ユーザー一覧 */
            users?: ({
                /**
                 * Format: int64
                 * @description ユーザーID
                 */
                id?: number;
                /** @description ユーザー名 */
                name?: string;
                /** @description ユーザーコード */
                code?: string;
                /** @description 所属施設 */
                facilities?: {
                    /** @description 施設ID */
                    id?: number;
                    /** @description 施設名称 */
                    name?: string;
                    /** @description 施設コード */
                    code?: string;
                  }[];
                /**
                 * @description 状態
                 * @enum {string}
                 */
                status?: "active" | "inactive";
                /** @description ロック状態 */
                locked?: boolean;
              })[];
            /**
             * Format: int64
             * @description ユーザー総数
             */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品に紐づくユーザーの一覧取得（防災センター） */
  listProductUsers_disasterPreventionCenter: {
    parameters: {
      query?: {
        /**
         * @description 検索キーワード。
         * ユーザー名、ユーザーコードを対象とする。
         * 制御文字は弾く。
         */
        keywords?: string;
        /**
         * @description ユーザーグループID
         * @example 1
         */
        userGroupId?: number;
        /** @description 施設ID */
        facilityId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /**
         * @description 検索モード。
         * 製品に紐づくユーザーのみを取得する場合はproductUsersOnlyを指定する。
         * 製品に紐づかないユーザーのみを取得する場合はnonProductUsersOnlyを指定する。
         */
        mode?: "productUsersOnly" | "nonProductUsersOnly";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        /** @description ページ番号 */
        page?: number;
        /** @description 1ページあたりの表示件数 */
        perPage?: 20 | 50 | 100;
      };
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @description ユーザー一覧 */
            users?: ({
                /**
                 * Format: int64
                 * @description ユーザーID
                 */
                id?: number;
                /** @description ユーザー名 */
                name?: string;
                /** @description ユーザーコード */
                code?: string;
                /** @description 所属施設 */
                facilities?: {
                    /** @description 施設ID */
                    id?: number;
                    /** @description 施設名称 */
                    name?: string;
                    /** @description 施設コード */
                    code?: string;
                  }[];
                /**
                 * @description 状態
                 * @enum {string}
                 */
                status?: "active" | "inactive";
                /** @description ロック状態 */
                locked?: boolean;
              })[];
            /**
             * Format: int64
             * @description ユーザー総数
             */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品に紐づくユーザーの一覧取得（ショップ） */
  listProductUsers_shop: {
    parameters: {
      query?: {
        /**
         * @description 検索キーワード。
         * ユーザー名、ユーザーコード、ショップ名、ショップコードを対象とする。
         * 制御文字は弾く。
         */
        keywords?: string;
        /**
         * @description ユーザーグループID
         * @example 1
         */
        userGroupId?: number;
        /** @description 施設ID */
        facilityId?: number;
        /**
         * @description ショップID
         * @example 1
         */
        shopId?: number;
        /** @description 状態 */
        status?: "all" | "active" | "inactive";
        /** @description ロック状態 */
        lock?: "all" | "unlocked" | "locked";
        /**
         * @description 検索モード。
         * 製品に紐づくユーザーのみを取得する場合はproductUsersOnlyを指定する。
         * 製品に紐づかないユーザーのみを取得する場合はnonProductUsersOnlyを指定する。
         */
        mode?: "productUsersOnly" | "nonProductUsersOnly";
        /** @description 並び順 */
        sort?: "name" | "code";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
        /** @description ページ番号 */
        page?: number;
        /** @description 1ページあたりの表示件数 */
        perPage?: 20 | 50 | 100;
      };
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @description ユーザー一覧 */
            users?: ({
                /**
                 * Format: int64
                 * @description ユーザーID
                 */
                id?: number;
                /** @description ユーザー名 */
                name?: string;
                /** @description ユーザーコード */
                code?: string;
                /** @description 所属施設 */
                facility?: {
                  /** @description 施設ID */
                  id?: number;
                  /** @description 施設名称 */
                  name?: string;
                  /** @description 施設コード */
                  code?: string;
                };
                /** @description 所属ショップ */
                shop?: {
                  /** @description ショップID */
                  id?: number;
                  /** @description ショップ名称 */
                  name?: string;
                  /** @description ショップコード */
                  code?: string;
                };
                /**
                 * @description 状態
                 * @enum {string}
                 */
                status?: "active" | "inactive";
                /** @description ロック状態 */
                locked?: boolean;
              })[];
            /**
             * Format: int64
             * @description ユーザー総数
             */
            totalCount?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分一覧取得 */
  listManagementDivisions: {
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            managementDivisions?: ({
                /**
                 * Format: int64
                 * @description 管理区分ID
                 */
                id?: number;
                /** @description 管理区分名 */
                name?: string;
                /** @description 管理区分コード */
                code?: string;
                /**
                 * @description 状態
                 * @enum {string}
                 */
                status?: "active" | "inactive";
                /**
                 * @description 状態が無効の場合は必須項目
                 * @example 利用停止
                 */
                deactivateReason?: string;
              })[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 管理区分の登録 */
  addManagementDivision: {
    /** @description 管理区分の登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 管理区分名
           * @example 売場面積
           */
          name: string;
          /**
           * @description 管理区分コード
           * 半角英数字のみ
           * 契約会社ごとにユニーク制約
           *
           * @example 0001
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             * @example 1
             */
            managementDivisionId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 管理区分の詳細取得 */
  getManagementDivision: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             */
            id?: number;
            /** @description 管理区分名 */
            name?: string;
            /** @description 管理区分コード */
            code?: string;
            /**
             * @description 状態
             * @enum {string}
             */
            status?: "active" | "inactive";
            /**
             * @description 状態が無効の場合は必須項目
             * @example 利用停止
             */
            deactivateReason?: string;
            /** @description 管理区分値一覧 */
            values?: ({
                /**
                 * Format: int64
                 * @description 管理区分値ID
                 */
                id?: number;
                /** @description 表示名 */
                name?: string;
                /** @description 管理区分値 */
                value?: string;
                /**
                 * @description 状態
                 * @enum {string}
                 */
                status?: "active" | "inactive";
                /**
                 * @description 状態が無効の場合は必須項目
                 * @example 利用停止
                 */
                deactivateReason?: string;
                /** @description 表示順 */
                displayOrder?: number;
              })[];
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分の更新 */
  updateManagementDivision: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    /** @description 管理区分の更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 管理区分名
           * @example 売場面積
           */
          name: string;
          /**
           * @description 管理区分コード
           * 半角英数字のみ
           * 契約会社ごとにユニーク制約
           *
           * @example 0001
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             * @example 1
             */
            managementDivisionId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分の有効化 */
  activateManagementDivision: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             * @example 1
             */
            managementDivisionId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分の無効化 */
  deactivateManagementDivision: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             * @example 1
             */
            managementDivisionId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分値の登録 */
  addManagementDivisionValue: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    /** @description 管理区分値の登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 表示名
           * @example 100㎡未満
           */
          name: string;
          /**
           * @description 管理区分値
           * 半角英数字のみ
           * 管理区分ごとにユニーク制約
           *
           * @example 0001
           */
          value: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分値ID
             * @example 1
             */
            managementDivisionValueId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 管理区分値の並び替え */
  reorderManagementDivisionValues: {
    parameters: {
      path: {
        /** @description 管理区分ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["orderIds"];
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      422: {
        content: {
        };
      };
    };
  };
  /** 管理区分値の更新 */
  updateManagementDivisionValue: {
    parameters: {
      path: {
        /** @description 管理区分値ID */
        id: number;
      };
    };
    /** @description 管理区分値の更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * @description 表示名
           * @example 100㎡未満
           */
          name: string;
          /**
           * @description 管理区分値
           * 半角英数字のみ
           * 管理区分ごとにユニーク制約
           *
           * @example 0001
           */
          value: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分ID
             * @example 1
             */
            managementDivisionValueId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分値の有効化 */
  activateManagementDivisionValue: {
    parameters: {
      path: {
        /** @description 管理区分値ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分値ID
             * @example 1
             */
            managementDivisionValueId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 管理区分値の無効化 */
  deactivateManagementDivisionValue: {
    parameters: {
      path: {
        /** @description 管理区分値ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["deactivateReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 管理区分値ID
             * @example 1
             */
            managementDivisionValueId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** ロゴの登録 */
  addLogo: {
    /** @description ロゴの登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example 1 */
          logoImageId: number;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** ロゴの削除 */
  deleteLogo: {
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 製品の登録 */
  addProduct: {
    /** @description 製品の登録データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example コミュニケーション */
          name: string;
          /**
           * @description 半角英数字とハイフン
           * 製品コード内でユニーク制約
           *
           * @example communication
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            productId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 製品の並び替え */
  reorderProducts: {
    requestBody: components["requestBodies"]["orderIds"];
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      422: {
        content: {
        };
      };
    };
  };
  /** 製品の詳細取得 */
  showProducts: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id?: number;
            /** @example コミュニケーション */
            name?: string;
            /** @example communication */
            code?: string;
            /** @example 1 */
            displayOrder?: number;
            /** @example true */
            locked?: boolean;
            /**
             * @description ロック状態がロック中の場合は必須項目
             * @example 障害の為、一時利用停止
             */
            lockReason?: string;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品の更新 */
  updateProducts: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    /** @description 製品の更新データ */
    requestBody: {
      content: {
        "application/json": {
          /** @example コミュニケーション */
          name: string;
          /**
           * @description 半角英数字とハイフン
           * 製品コード内でユニーク制約
           *
           * @example communication
           */
          code: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            productId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品のロック */
  lockProduct: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["lockReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            productId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品のロック解除 */
  unlockProduct: {
    parameters: {
      path: {
        /** @description 製品ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            productId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社の一覧取得 */
  listClientCompanies: {
    parameters: {
      query?: {
        /** @description 会社名・会社コード */
        keywords?: string;
        /** @description 並び順 */
        sort?: "name" | "code" | "createdDate" | "locked";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            clientCompanies?: {
                /** @example 1 */
                id?: number;
                /** @example 会社A */
                name?: string;
                /** @example 0001 */
                code?: string;
                /** Format: date */
                createdDate?: string;
                locked?: boolean;
              }[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 契約会社の登録 */
  addClientCompany: {
    /** @description 契約会社の登録データ */
    requestBody: {
      content: {
        "application/json": {
          client_company?: {
            /**
             * @description 制御文字が来たらエラーにする
             * @example 会社A
             */
            name: string;
            /**
             * @description 半角英数字とハイフン12文字以内
             * ハイフンは先頭不可、連続使用不可
             * ユニーク制約
             * サブドメインの予約語(www, ftp, smtp, pop, mail)禁止
             *
             * @example 0001
             */
            code: string;
            /**
             * @description ハイフンなしの半角数字
             * @example 7010165
             */
            postcode?: string;
            /** @example 岡山県岡山市北区大内田 */
            address?: string;
            /**
             * @description ハイフンなしの半角数字
             * @example 862926136
             */
            phoneNumber?: string;
            /**
             * @description ハイフンなしの半角数字
             * @example 862926136
             */
            faxNumber?: string;
            /** @example 田中太郎 */
            contactPerson?: string;
            /** @example 備考 */
            note?: string;
          };
          user?: {
            /** @example ユーザー1 */
            name: string;
            /**
             * @description 半角英数字
             * @example 0001
             */
            code: string;
            /** @description RFC準拠のメールアドレス */
            emails?: string[];
          };
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /** @example 1 */
            clientCompanyId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 契約会社の詳細取得 */
  showClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            id?: number;
            /** @example 会社A */
            name?: string;
            /** @example 0001 */
            code?: string;
            /** @example 7010165 */
            postcode?: string;
            /** @example 岡山県岡山市北区大内田 */
            address?: string;
            /** @example 862926136 */
            phoneNumber?: string;
            /** @example 862926136 */
            faxNumber?: string;
            /** @example 田中太郎 */
            contactPerson?: string;
            /** @example 備考 */
            note?: string;
            /** Format: date */
            createdDate?: string;
            locked?: boolean;
            /**
             * @description ロック状態がロック中の場合は必須項目
             * @example 障害の為、一時利用停止
             */
            lockReason?: string;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社の更新 */
  updateClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    /** @description 契約会社の更新データ */
    requestBody: {
      content: {
        "application/json": {
          /**
           * @description 制御文字が来たらエラーにする
           * @example 会社A
           */
          name: string;
          /**
           * @description 半角英数字とハイフン12文字以内
           * ハイフンは先頭不可、連続使用不可
           * ユニーク制約
           * サブドメインの予約語(www, ftp, smtp, pop, mail)禁止
           *
           * @example 0001
           */
          code: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 7010165
           */
          postcode?: string;
          /** @example 岡山県岡山市北区大内田 */
          address?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 862926136
           */
          phoneNumber?: string;
          /**
           * @description ハイフンなしの半角数字
           * @example 862926136
           */
          faxNumber?: string;
          /** @example 田中太郎 */
          contactPerson?: string;
          /** @example 備考 */
          note?: string;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            clientCompanyId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社の削除 */
  deleteClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      204: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社のロック */
  lockClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["lockReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            clientCompanyId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社のロック解除 */
  unlockClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /** @example 1 */
            clientCompanyId?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 契約会社のメンテナンスログイン */
  loginClientCompany: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品契約の一覧取得 */
  listProductContracts: {
    parameters: {
      query?: {
        /** @description 製品ID（複数指定可） */
        productIds?: string[];
        /** @description 現在契約中の（利用可能な）製品のみを取得するか */
        onlyAvailable?: boolean;
        /** @description 並び順 */
        sort?: "product" | "startDate" | "endDate";
        /** @description 昇順・降順 */
        order?: "asc" | "desc";
      };
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            productContracts?: {
                /**
                 * Format: int64
                 * @description 製品契約ID
                 */
                id?: number;
                /** @description 製品 */
                product?: {
                  /**
                   * Format: int64
                   * @description 製品ID
                   */
                  id?: number;
                  /** @description 製品名 */
                  name?: string;
                };
                /**
                 * Format: date
                 * @description 契約開始日
                 */
                startDate?: string;
                /**
                 * Format: date
                 * @description 契約終了日
                 */
                endDate?: string;
                /**
                 * Format: int64
                 * @description 最大ユーザー数
                 */
                maxNumberOfUsers?: number;
                /**
                 * Format: int64
                 * @description 現在のユーザー数
                 */
                currentNumberOfUsers?: number;
                /**
                 * Format: int64
                 * @description 合計月額料金（税抜）
                 */
                totalMonthlyPrice?: number;
                /** @description ロック */
                locked?: boolean;
              }[];
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 製品契約の登録 */
  addProductContract: {
    parameters: {
      path: {
        /** @description 契約会社ID */
        id: number;
      };
    };
    /** @description 製品契約の登録データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * Format: int64
           * @description 製品ID
           * @example 2
           */
          productId: number;
          /**
           * Format: date
           * @description 契約開始日。契約開始日 ≦ 契約終了日 を満たす必要がある。
           * @example 2023-04-01
           */
          startDate: string;
          /**
           * Format: date
           * @description 契約終了日。契約開始日 ≦ 契約終了日 を満たす必要がある。
           * @example 2024-03-31
           */
          endDate: string;
          /**
           * Format: int64
           * @description 最大ユーザー数
           * @example 120
           */
          maxNumberOfUsers: number;
          /**
           * Format: int64
           * @description 初期費用（税抜）
           * @example 30000
           */
          initialCost: number;
          /**
           * Format: int64
           * @description 基本料金（税抜）
           * @example 10000
           */
          basePrice: number;
          /**
           * Format: int64
           * @description 1ユーザーあたりの料金（税抜）
           * @example 100
           */
          pricePerUser: number;
        };
      };
    };
    responses: {
      /** @description 正常 */
      201: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 製品契約ID
             * @example 3
             */
            productContractId?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
    };
  };
  /** 製品契約の詳細取得 */
  showProductContract: {
    parameters: {
      path: {
        /** @description 製品契約ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 製品契約ID
             * @example 3
             */
            id?: number;
            /** @description 製品 */
            product?: {
              /**
               * Format: int64
               * @description 製品ID
               * @example 1
               */
              id?: number;
              /**
               * @description 製品名
               * @example コミュニケーション
               */
              name?: string;
            };
            /**
             * Format: date
             * @description 契約開始日
             * @example 2023-04-01
             */
            startDate?: string;
            /**
             * Format: date
             * @description 契約終了日
             * @example 2024-03-31
             */
            endDate?: string;
            /**
             * Format: int64
             * @description 最大ユーザー数
             * @example 100
             */
            maxNumberOfUsers?: number;
            /**
             * Format: int64
             * @description 現在のユーザー数
             * @example 80
             */
            currentNumberOfUsers?: number;
            /**
             * Format: int64
             * @description 初期費用（税抜）
             * @example 30000
             */
            initialCost?: number;
            /**
             * Format: int64
             * @description 基本料金（税抜）
             * @example 10000
             */
            basePrice?: number;
            /**
             * Format: int64
             * @description 1ユーザーあたりの料金（税抜）
             * @example 100
             */
            pricePerUser?: number;
            /**
             * @description ロック
             * @example false
             */
            locked?: boolean;
            /**
             * @description ロック状態がロック中の場合は必須項目
             * @example 障害の為、一時利用停止
             */
            lockReason?: string;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品契約の更新 */
  updateProductContract: {
    parameters: {
      path: {
        /** @description 製品契約ID */
        id: number;
      };
    };
    /** @description 製品契約の更新データ */
    requestBody?: {
      content: {
        "application/json": {
          /**
           * Format: date
           * @description 契約開始日。契約開始日 ≦ 契約終了日 を満たす必要がある。
           * @example 2023-04-01
           */
          startDate: string;
          /**
           * Format: date
           * @description 契約終了日。契約開始日 ≦ 契約終了日 を満たす必要がある。
           * @example 2024-03-31
           */
          endDate: string;
          /**
           * Format: int64
           * @description 最大ユーザー数
           * @example 100
           */
          maxNumberOfUsers: number;
          /**
           * Format: int64
           * @description 初期費用（税抜）
           * @example 30000
           */
          initialCost: number;
          /**
           * Format: int64
           * @description 基本料金（税抜）
           * @example 10000
           */
          basePrice: number;
          /**
           * Format: int64
           * @description 1ユーザーあたりの料金（税抜）
           * @example 100
           */
          pricePerUser: number;
        };
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @description 製品契約ID
             * @example 3
             */
            id?: number;
          };
        };
      };
      /** @description バリデーションエラー */
      400: {
        content: {
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品契約のロック */
  lockProductContract: {
    parameters: {
      path: {
        /** @description 製品契約ID */
        id: number;
      };
    };
    requestBody: components["requestBodies"]["lockReason"];
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @example 3
             */
            id?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 製品契約のロック解除 */
  unlockProductContract: {
    parameters: {
      path: {
        /** @description 製品契約ID */
        id: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            /**
             * Format: int64
             * @example 3
             */
            id?: number;
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
  /** 郵便番号から住所検索 */
  findAddressByPostcode: {
    parameters: {
      path: {
        /** @description 郵便番号 */
        postcode: number;
      };
    };
    responses: {
      /** @description 正常 */
      200: {
        content: {
          "application/json": {
            addresses?: {
                /** @example 岡山県 */
                address1?: string;
                /** @example 岡山市北区 */
                address2?: string;
                /** @example 大内田 */
                address3?: string;
              }[];
          };
        };
      };
      /** @description ログインしていない */
      401: {
        content: {
        };
      };
      /** @description アクセス権限なし */
      403: {
        content: {
        };
      };
      /** @description 該当データなし */
      404: {
        content: {
        };
      };
    };
  };
}
